{"version":3,"sources":["bll/actions/actions.ts","dal/api.ts","bll/basketReducer.ts","bll/mainReducer.ts","bll/store.ts","ui/Header/Header.tsx","ui/Basket/ProductInBasket.tsx","ui/Basket/UserForm.tsx","ui/Basket/Basket.tsx","ui/Main/Product/Product.tsx","ui/Main/Main.tsx","App.tsx","ui/common/saveToLocalStorage.ts","AppContainer.tsx","index.tsx"],"names":["Actions","createActions","setProducts","data","totalPrice","addToBasket","product","downQuantityInBasket","id","upQuantityInBasket","setArrProductsToBasket","products","clearBasket","fakeState","title","description","price","image","fakeApi","Promise","res","setTimeout","order","console","log","basketReducer","handleActions","state","payload","every","pr","addQuantity","quantity","map","reduce","acc","el","total","filter","newArr","mainReducer","toString","rootReducer","combineReducers","mainState","basketState","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","useStyles","makeStyles","theme","root","display","alignContent","menuButton","marginRight","spacing","Header","classes","useSelector","AppBar","position","Toolbar","Box","mr","to","Button","color","variant","className","IconButton","edge","fontSize","Typography","ProductInBasket","props","Paper","onClick","onClickRemoveProduct","onClickAddProduct","UserReduxForm","reduxForm","onSubmit","handleSubmit","Field","placeholder","name","component","type","FormBasket","dispatch","useDispatch","formData","a","userOrder","response","alert","sendOrderTC","reset","Basket","find","productsInCart","key","minWidth","media","height","Product","Grid","item","xs","sm","md","Card","CardActionArea","CardMedia","CardContent","gutterBottom","CardActions","onClickHandler","size","Main","useEffect","thunk","dataProducts","container","mainPost","paddingTop","App","productsToLocalStorage","defaultState","stateAsString","localStorage","getItem","JSON","parse","restoreState","Container","maxWidth","path","exact","AppContainer","stringify","setItem","saveState","ReactDOM","render","document","getElementById"],"mappings":"6UAGaA,EAAUC,YAAc,CACjCC,YAAa,SAACC,GAAD,OAAWA,GACxBC,WAAY,aACZC,YAAa,SAACC,GAAD,MAAc,CAACA,YAC5BC,qBAAsB,SAACC,GAAD,OAASA,GAC/BC,mBAAoB,SAACD,GAAD,OAASA,GAC7BE,uBAAwB,SAACC,GAAD,MAAe,CAACA,aACxCC,YAAa,eCVJC,EAAY,CACrB,CACIC,MAAO,OACPC,YAAa,8BACbC,MAAO,GACPR,GAAI,IACJS,MAAO,sCAEX,CACIH,MAAO,MACPC,YAAa,8BACbC,MAAO,GACPR,GAAI,IACJS,MAAO,sCAEX,CACIH,MAAO,QACPC,YAAa,8BACbC,MAAO,GACPR,GAAI,IACJS,MAAO,sCAEX,CACIH,MAAO,cACPC,YAAa,8BACbC,MAAO,GACPR,GAAI,IACJS,MAAO,sCAEX,CACIH,MAAO,QACPC,YAAa,8BACbC,MAAO,IACPR,GAAI,IACJS,MAAO,sCAEX,CACIH,MAAO,SACPC,YAAa,8BACbC,MAAO,IACPR,GAAI,IACJS,MAAO,uCAKFC,EACI,WACT,OAAO,IAAIC,SAAQ,SAACC,GAChBC,YAAW,WACP,OAAOD,EAAIP,KACZ,SALFK,EAQO,SAACI,GACb,OAAO,IAAIH,SAAQ,SAACC,GAChBC,YAAW,WAEP,OADAE,QAAQC,IAAIF,GACLF,EAAI,2CACZ,SCUAK,EA7CcC,aAAa,6BAC9B1B,EAAQK,cAAgB,SAACsB,EAAD,GAAuC,IAApBrB,EAAmB,EAA7BsB,QAAUtB,QAE3C,GADoBqB,EAAMhB,SAASkB,OAAM,SAACC,GAAD,OAAaA,EAAGtB,KAAOF,EAAQE,MACrD,CACf,IAAMuB,EAAW,eAAOzB,EAAP,CAAgB0B,SAAU,IAC3C,OAAO,eAAIL,EAAX,CAAkBhB,SAAS,GAAD,mBAAMgB,EAAMhB,UAAZ,CAAsBoB,MAEpD,IAAMA,EAAcJ,EAAMhB,SAASsB,KAAI,SAACH,GACpC,OAAOA,EAAGtB,KAAOF,EAAQE,GAAlB,eACGsB,EADH,CACOE,SAAUF,EAAGE,SAAWF,EAAGE,SAAW,EAAI,IAClDF,KAEV,OAAO,eAAIH,EAAX,CAAkBhB,SAAUoB,OAZE,wBAc9B/B,EAAQI,aAAe,SAACuB,GACxB,IAAIvB,EAAauB,EAAMhB,SAASuB,QAAO,SAACC,EAAaC,GACjD,OAAOD,EAAQC,EAAGpB,MAASoB,EAAGJ,WAC/B,MACH,OAAO,eAAIL,EAAX,CAAkBU,MAAOjC,OAlBK,wBAoB9BJ,EAAQO,uBAAyB,SAACoB,EAAD,GAA2B,IAATnB,EAAQ,EAAjBoB,QAC1C,OAAO,eACAD,EADP,CACchB,SAAUgB,EAAMhB,SAASsB,KAAI,SAACH,GAAD,OAAaA,EAAGtB,KAAOA,GAAMsB,EAAGE,SAAW,EAA9B,eAC7CF,EAD6C,CAEhDE,SAAUF,EAAGE,UAAY,IACzBF,KAAIQ,QAAO,SAACF,GAAD,OAAaA,EAAGJ,SAAW,UAzBhB,wBA4B9BhC,EAAQS,qBAAuB,SAACkB,EAAD,GAA2B,IAATnB,EAAQ,EAAjBoB,QAKpCW,EAJcZ,EAAMhB,SAASsB,KAAI,SAACH,GAAD,OAAaA,EAAGtB,KAAOA,GAAMsB,EAAGE,SAAW,EAA9B,eAC3CF,EAD2C,CAE9CE,SAAUF,EAAGE,UAAY,IACzBF,KACqBQ,QAAO,SAACF,GAAD,OAAaA,EAAGJ,SAAW,KAC3D,OAAO,eAAIL,EAAX,CAAkBhB,SAAU4B,OAlCE,wBAoC9BvC,EAAQU,yBAA2B,SAACiB,EAAD,GAAmC,IAAhBhB,EAAe,EAAzBiB,QAAUjB,SACtD,OAAO,eAAIgB,EAAX,GAAqBhB,MArCS,wBAuC9BX,EAAQY,cAAgB,SAACe,GACzB,OAAO,eAAIA,EAAX,CAAkBhB,SAAU,GAAI0B,MAAO,UAxCT,GALlB,CACpB1B,SAAU,GACV0B,MAAO,OCbEG,EAAcd,YAAa,eAE/B1B,EAAQE,YAAYuC,YAAa,SAACd,EAAD,GAC9B,OAD8D,EAAvBC,WAJhC,IAuBJY,I,kBCvBTE,EAAcC,YAAgB,CAChCC,UAAWJ,EACXK,YAAapB,EACbqB,KAAMC,MAGGC,EAAQC,YAAYP,EAAaQ,YAAgBC,MAK9DC,OAAOJ,MAAQA,E,4GCTTK,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,QAAS,OACTC,aAAc,YAElBC,WAAY,CACRC,YAAaL,EAAMM,QAAQ,QAItBC,EAAS,WAElB,IAAMC,EAAUV,IAEVjD,EAAa4D,aAA6C,SAAArC,GAAK,OAAIA,EAAMkB,YAAYR,SAC3F,OACI,kBAAC4B,EAAA,EAAD,CAAQC,SAAS,UACb,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,kBAAC,IAAD,CAAMC,GAAG,KACL,kBAACC,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAQ,WAAWC,UAAWX,EAAQJ,YAA9D,UAGR,kBAACS,EAAA,EAAD,CAAKC,GAAI,GACL,kBAAC,IAAD,CAAMC,GAAG,WACL,kBAACK,EAAA,EAAD,CAAYC,KAAK,MAAMJ,MAAM,WACzB,kBAAC,IAAD,CAAkBK,SAAS,aAItCzE,GAAc,kBAAC0E,EAAA,EAAD,CAAYL,QAAQ,MAApB,WAAkCrE,EAAlC,Q,iBCjClB2E,EAAkB,SAAC,GAA8D,IAA7DvE,EAA4D,EAA5DA,GAAIM,EAAwD,EAAxDA,MAAOE,EAAiD,EAAjDA,MAAOD,EAA0C,EAA1CA,YAAaiB,EAA6B,EAA7BA,SAAagD,EAAgB,+DASzF,OACI,kBAACC,EAAA,EAAD,CAAOP,UAAU,gBACb,8BAAO5D,GACP,8BAAOE,GACP,8BAAOD,GACP,kBAACwD,EAAA,EAAD,CAAQE,QAAQ,YAAYD,MAAM,UAAUU,QAX5B,WACpBF,EAAMG,qBAAqB3E,KAUvB,KACA,8BAAOwB,GACP,kBAACuC,EAAA,EAAD,CAAQE,QAAQ,YAAYD,MAAM,UAAUU,QAV5B,WACpBF,EAAMI,kBAAkB5E,KASpB,O,0BCmBN6E,EAAgBC,YAAe,CAACxC,KAAM,YAAtBwC,EAjCA,SAACN,GAEnB,OACI,0BAAMO,SAAUP,EAAMQ,cAClB,yBAAKd,UAAU,mBAEX,kBAACe,EAAA,EAAD,CAAOC,YAAY,aACZC,KAAK,YACLC,UAAU,QACVC,KAAK,SAEZ,kBAACJ,EAAA,EAAD,CAAOC,YAAY,YACZC,KAAK,WACLC,UAAU,QACVC,KAAK,SAEZ,kBAACJ,EAAA,EAAD,CAAOC,YAAY,UACZC,KAAK,UACLC,UAAU,QACVC,KAAK,SAEZ,kBAACJ,EAAA,EAAD,CAAOC,YAAY,QACZC,KAAK,QACLC,UAAU,QACVC,KAAK,SAEZ,kBAACtB,EAAA,EAAD,CACIE,QAAQ,YAAYD,MAAM,UAC1BqB,KAAK,UAFT,cA0BDC,EAjBI,WACf,IAAMnF,EAAWqD,aAA8B,SAAArC,GAAK,OAAIA,EAAMkB,YAAYlC,YACpEoF,EAAWC,cAOjB,OACI,6BACI,kBAACX,EAAD,CAAeE,SAPN,SAACU,GACdF,EL0BmB,SAACE,EAAetF,GAAhB,8CAAkC,WAAOoF,GAAP,iBAAAG,EAAA,sEAE/CC,EAF+C,eAE/BF,EAF+B,CAErBtF,aAFqB,SAGhCO,EAAuBiF,GAHS,OAGjDC,EAHiD,OAIrDC,MAAMD,GACNL,EAAS/F,EAAQY,eALoC,8FAAlC,sDK1BV0F,CAAYL,EAAUtF,IAC/BoF,EAASQ,YAAM,kBCtCVC,EAAS,WAAO,IAAD,EACExC,aAAmC,SAAArC,GAAK,OAAIA,EAAMkB,eAArElC,EADiB,EACjBA,SAAU0B,EADO,EACPA,MAEX0D,EAAWC,cAGXb,EAAuB,SAAC3E,GAC1B,IAAIF,EAAUK,EAAS8F,MAAK,SAAC3E,GAAD,OAAqBA,EAAGtB,KAAOA,KAC3DuF,EAAS/F,EAAQO,qBAAqBD,EAAQE,KAC9CuF,EAAS/F,EAAQI,eAEfgF,EAAoB,SAAC5E,GACvB,IAAIF,EAAUK,EAAS8F,MAAK,SAAC3E,GAAD,OAAqBA,EAAGtB,KAAOA,KAC3DuF,EAAS/F,EAAQS,mBAAmBH,EAAQE,KAC5CuF,EAAS/F,EAAQI,eAGfsG,EAAiB/F,EAASsB,KAAI,SAACH,GACjC,OAAO,kBAAC,EAAD,CACH6E,IAAK7E,EAAGtB,GACRM,MAAOgB,EAAGhB,MACVC,YAAae,EAAGf,YAChBC,MAAOc,EAAGd,MACVR,GAAIsB,EAAGtB,GACPwB,SAAUF,EAAGE,SACbmD,qBAAsBA,EACtBC,kBAAmBA,OAI3B,OACI,kBAACH,EAAA,EAAD,KACI,yBAAKP,UAAU,kBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,qBACVgC,IAGT,yBAAKhC,UAAU,aACX,kBAAC,EAAD,QAGR,kBAACI,EAAA,EAAD,gBAAqBzC,GAASA,EAAQ,Q,yDCvChDgB,GAAYC,YAAW,CACzBE,KAAM,CACFoD,SAAU,KAEdC,MAAO,CACHC,OAAQ,OAcHC,GAAU,SAAC,GAA+D,IAA9DjG,EAA6D,EAA7DA,MAAOC,EAAsD,EAAtDA,YAAaC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,MAAU+D,EAAwB,uDAC5EjB,EAAUV,KAMhB,OACI,kBAAC2D,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC1B,kBAACC,EAAA,EAAD,CAAM3C,UAAWX,EAAQP,MACrB,kBAAC8D,EAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACI7C,UAAWX,EAAQ8C,MACnB5F,MAAOA,EACPH,MAAOA,IAEX,kBAAC0G,GAAA,EAAD,KACI,kBAAC1C,EAAA,EAAD,CAAY2C,cAAY,EAAChD,QAAQ,KAAKmB,UAAU,MAC3C5E,GAEL,kBAAC8D,EAAA,EAAD,CAAYL,QAAQ,QAAQD,MAAM,gBAAgBoB,UAAU,KACvD7E,KAIb,kBAAC2G,GAAA,EAAD,KACI,kBAACnD,EAAA,EAAD,CAAQW,QAvBD,WACnBF,EAAM2C,eAAe3C,EAAMxE,KAuBPoH,KAAK,SACLpD,MAAM,UACNC,QAAQ,aAHhB,WClDPoD,GAAO,WAEhB,IAAM1H,EAAO6D,aAAmC,SAAArC,GAAK,OAAIA,EAAMiB,aAEzDmD,EAAWC,cAEjB8B,qBAAU,WACN,IAAMC,EPGiB,uCAAM,WAAOhC,GAAP,eAAAG,EAAA,+EAEJhF,IAFI,OAEzB8G,EAFyB,OAG7BjC,EAAS/F,EAAQE,YAAY8H,IAHA,8FAAN,sDOFvBjC,EAASgC,KACV,CAAChC,IAEJ,IAAM4B,EAAiB,SAACnH,GACpB,IAAIF,EAAUH,EAAKsG,MAAK,SAAC3E,GAAD,OAAqBA,EAAGtB,KAAOA,KACvDuF,EAAS/F,EAAQK,YAAR,eAAwBC,EAAxB,CAAiC0B,SAAU,MACpD+D,EAAS/F,EAAQI,eAGrB,OACI,kBAAC4G,EAAA,EAAD,CAAMiB,WAAS,EAACpE,QAAS,GACpB1D,EAAK8B,KAAI,SAACG,GACP,OAAO,kBAAC,GAAD,CACHuE,IAAKvE,EAAG5B,GACRM,MAAOsB,EAAGtB,MACVC,YAAaqB,EAAGrB,YAChBC,MAAOoB,EAAGpB,MACVR,GAAI4B,EAAG5B,GACPmH,eAAgBA,EAChB1G,MAAOmB,EAAGnB,a,UCvBxBoC,GAAYC,aAAW,iBAAO,CAChC4E,SAAU,CACNC,WAAY,QAKPC,GAAM,WACf,IAAMrE,EAAUV,KADK,EAGKW,aAAmC,SAAArC,GAAK,OAAIA,EAAMkB,eAArElC,EAHc,EAGdA,SAAU0B,EAHI,EAGJA,MAEX0D,EAAWC,cASjB,OANA8B,qBAAU,WACN,IAAMO,ECtBP,SAAyB1B,EAAa2B,GACzC,IAAMC,EAAgBC,aAAaC,QAAQ9B,GAE3C,OADsB,OAAlB4B,IAAwBD,EAAeI,KAAKC,MAAMJ,IAC/CD,EDmB4BM,CAAa,mBAAoB,CAACjI,WAAU0B,UAC3E0D,EAAS/F,EAAQU,uBAAuB2H,MACzC,CAACtC,IAIA,oCACI,kBAAC,EAAD,MACA,8BACI,kBAACd,EAAA,EAAD,CAAOP,UAAWX,EAAQmE,UACtB,kBAACW,GAAA,EAAD,CAAWC,SAAS,MAChB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,WACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,KACd,kBAAC,GAAD,aEpBjBE,GAjBM,WAEjB,IAAMtI,EAAWqD,aAAmC,SAAArC,GAAK,OAAIA,EAAMkB,eAOnE,OAJAiF,qBAAU,YDZP,SAAsBnB,EAAahF,GACtC,IAAM4G,EAAgBG,KAAKQ,UAAUvH,GACrC6G,aAAaW,QAAQxC,EAAK4B,GCWtBa,CAAU,mBAAoBzI,KAC/B,CAACA,IAGA,kBAAC,IAAD,KACI,kBAAC,GAAD,QCZZ0I,IAASC,OACL,kBAAC,IAAD,CAAUtG,MAAOA,GACb,kBAAC,GAAD,OAEJuG,SAASC,eAAe,W","file":"static/js/main.1a5f26f1.chunk.js","sourcesContent":["import {createActions} from \"redux-actions\";\r\n\r\n\r\nexport const Actions = createActions({\r\n    setProducts: (data) => (data),\r\n    totalPrice: () => {},\r\n    addToBasket: (product) => ({product}),\r\n    downQuantityInBasket: (id) => (id),\r\n    upQuantityInBasket: (id) => (id),\r\n    setArrProductsToBasket: (products) => ({products}),\r\n    clearBasket: () => {\r\n    }\r\n});\r\n\r\n","export const fakeState = [\r\n    {\r\n        title: 'HTML',\r\n        description: \"Lorem ipsum dolor sit amet.\",\r\n        price: 20,\r\n        id: '1',\r\n        image: \"https://source.unsplash.com/random\"\r\n    },\r\n    {\r\n        title: 'CSS',\r\n        description: \"Lorem ipsum dolor sit amet.\",\r\n        price: 30,\r\n        id: '2',\r\n        image: \"https://source.unsplash.com/random\"\r\n    },\r\n    {\r\n        title: 'REDUX',\r\n        description: \"Lorem ipsum dolor sit amet.\",\r\n        price: 40,\r\n        id: '3',\r\n        image: \"https://source.unsplash.com/random\"\r\n    },\r\n    {\r\n        title: 'REDUX-THUNK',\r\n        description: \"Lorem ipsum dolor sit amet.\",\r\n        price: 50,\r\n        id: '4',\r\n        image: \"https://source.unsplash.com/random\"\r\n    },\r\n    {\r\n        title: 'REACT',\r\n        description: \"Lorem ipsum dolor sit amet.\",\r\n        price: 100,\r\n        id: '5',\r\n        image: \"https://source.unsplash.com/random\"\r\n    },\r\n    {\r\n        title: 'ROUTER',\r\n        description: \"Lorem ipsum dolor sit amet.\",\r\n        price: 200,\r\n        id: '6',\r\n        image: \"https://source.unsplash.com/random\"\r\n    },\r\n]\r\n\r\n\r\nexport const fakeApi = {\r\n    getProducts: () => {\r\n        return new Promise((res) => { // get\r\n            setTimeout(() => {\r\n                return res(fakeState)\r\n            }, 1000)\r\n        })\r\n    },\r\n    sendingAnOrder: (order: any) => {\r\n        return new Promise((res) => { // post\r\n            setTimeout(() => {\r\n                console.log(order) // body\r\n                return res('Order accepted!, look in сonsole')\r\n            }, 2000)\r\n        })\r\n    }\r\n}","import {handleActions} from \"redux-actions\";\r\nimport {Actions} from \"./actions/actions\";\r\nimport {fakeApi} from \"../dal/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype ProductType = {\r\n    description: string\r\n    id: string\r\n    price: number\r\n    title: string\r\n    quantity?: number\r\n}\r\n\r\nexport type initialStateType = {\r\n    products: Array<ProductType>,\r\n    total: number | null\r\n}\r\n\r\n\r\nlet initialState: any = {\r\n    products: [] as any,\r\n    total: null\r\n}\r\n\r\nexport const basketReducer = handleActions({\r\n        [`${Actions.addToBasket}`]: (state, {payload: {product}}: any) => {\r\n            let isHaveProduct = state.products.every((pr: any) => pr.id !== product.id)\r\n            if (isHaveProduct) {\r\n                const addQuantity = {...product, quantity: 1}\r\n                return {...state, products: [...state.products, addQuantity]}\r\n            }\r\n            const addQuantity = state.products.map((pr: any) => {\r\n                return pr.id === product.id\r\n                    ? {...pr, quantity: pr.quantity ? pr.quantity + 1 : 2}\r\n                    : pr\r\n            })\r\n            return {...state, products: addQuantity}\r\n        },\r\n        [`${Actions.totalPrice}`]: (state: any) => {\r\n            let totalPrice = state.products.reduce((acc: number, el: any) => {\r\n                return acc += (el.price) * el.quantity\r\n            }, null)\r\n            return {...state, total: totalPrice}\r\n        },\r\n        [`${Actions.downQuantityInBasket}`]: (state, {payload: id}) => { // <= working like a upQuantity case\r\n            return {\r\n                ...state, products: state.products.map((pr: any) => pr.id === id && pr.quantity > 0 ? {\r\n                    ...pr,\r\n                    quantity: pr.quantity -= 1\r\n                } : pr).filter((el: any) => el.quantity > 0)\r\n            }\r\n        },\r\n        [`${Actions.upQuantityInBasket}`]: (state, {payload: id}) => {\r\n            let newProducts = state.products.map((pr: any) => pr.id === id && pr.quantity > 0 ? {\r\n                ...pr,\r\n                quantity: pr.quantity += 1\r\n            } : pr)\r\n            let newArr = newProducts.filter((el: any) => el.quantity > 0)\r\n            return {...state, products: newArr}\r\n        },\r\n        [`${Actions.setArrProductsToBasket}`]: (state, {payload: {products}}) => {\r\n            return {...state, ...products}\r\n        },\r\n        [`${Actions.clearBasket}`]: (state) => {\r\n            return {...state, products: [], total: null}\r\n        },\r\n    },\r\n    initialState)\r\n\r\nexport default basketReducer;\r\n\r\n// THUNK FOR SEND PRODUCTS\r\n\r\nexport const sendOrderTC = (formData: any, products: any) => async (dispatch: Dispatch) => {\r\n    try {\r\n        const userOrder = {...formData, products}\r\n        let response = await fakeApi.sendingAnOrder(userOrder)\r\n        alert(response)\r\n        dispatch(Actions.clearBasket())\r\n    } finally {\r\n\r\n    }\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {handleActions} from \"redux-actions\";\r\nimport {fakeApi} from \"../dal/api\";\r\nimport {Actions} from \"./actions/actions\";\r\n\r\n\r\nlet initialState = [] as []\r\n\r\nexport const mainReducer = handleActions<any>(\r\n    {\r\n        [Actions.setProducts.toString()]: (state, {payload: products}) => {\r\n            return products\r\n        },\r\n    },\r\n    initialState\r\n)\r\n\r\n// THUNK\r\n\r\nexport const fetchProductsTC = () => async (dispatch: Dispatch) => {\r\n    try {\r\n        let dataProducts = await fakeApi.getProducts()\r\n        dispatch(Actions.setProducts(dataProducts))\r\n    } finally {\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default mainReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport basketReducer from \"./basketReducer\";\r\nimport mainReducer from \"./mainReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nconst rootReducer = combineReducers({\r\n    mainState: mainReducer,\r\n    basketState: basketReducer,\r\n    form: formReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from \"react\"\r\nimport {Link} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../bll/store\";\r\nimport {AppBar, Box, Button, IconButton, makeStyles, Toolbar, Typography} from \"@material-ui/core\";\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        alignContent: \"flex-end\"\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n}))\r\n\r\nexport const Header = () => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const totalPrice = useSelector<AppRootStateType, number | null>(state => state.basketState.total)\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <Box mr={3}>\r\n                    <Link to=\"/\">\r\n                        <Button color=\"inherit\" variant=\"outlined\" className={classes.menuButton}>Main</Button>\r\n                    </Link>\r\n                </Box>\r\n                <Box mr={3}>\r\n                    <Link to=\"/basket\">\r\n                        <IconButton edge=\"end\" color=\"inherit\">\r\n                            <ShoppingCartIcon fontSize=\"large\"/>\r\n                        </IconButton>\r\n                    </Link>\r\n                </Box>\r\n                {totalPrice && <Typography variant=\"h6\">Total : {totalPrice}$</Typography>}\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Paper} from \"@material-ui/core\";\r\n\r\n\r\nexport const ProductInBasket = ({id, title, price, description, quantity, ...props}: any) => {\r\n\r\n\r\n    const decClickHandler = () => {\r\n        props.onClickRemoveProduct(id)\r\n    }\r\n    const incClickHandler = () => {\r\n        props.onClickAddProduct(id)\r\n    }\r\n    return (\r\n        <Paper className=\"product-item\">\r\n            <span>{title}</span>\r\n            <span>{price}</span>\r\n            <span>{description}</span>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={decClickHandler}>-</Button>\r\n            <span>{quantity}</span>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={incClickHandler}>+</Button>\r\n        </Paper>\r\n    )\r\n}","import React from \"react\";\r\nimport {reduxForm, InjectedFormProps, Field, reset} from \"redux-form\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../bll/store\";\r\nimport {sendOrderTC} from \"../../bll/basketReducer\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport let UserForm = (props: InjectedFormProps<any>) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className=\"order_container\">\r\n\r\n                <Field placeholder=\"FIRST NAME\"\r\n                       name=\"firstName\"\r\n                       component=\"input\"\r\n                       type=\"text\"\r\n                />\r\n                <Field placeholder=\"LAST NAME\"\r\n                       name=\"lastName\"\r\n                       component=\"input\"\r\n                       type=\"text\"\r\n                />\r\n                <Field placeholder=\"ADDRESS\"\r\n                       name=\"address\"\r\n                       component=\"input\"\r\n                       type=\"text\"\r\n                />\r\n                <Field placeholder=\"PHONE\"\r\n                       name=\"phone\"\r\n                       component=\"input\"\r\n                       type=\"text\"\r\n                />\r\n                <Button\r\n                    variant=\"contained\" color=\"primary\"\r\n                    type=\"submit\">Order</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst UserReduxForm = reduxForm<any>({form: 'userForm'})(UserForm)\r\n\r\nconst FormBasket = () => {\r\n    const products = useSelector<AppRootStateType>(state => state.basketState.products)\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmit = (formData: any) => { // Thunk which sends Data\r\n        dispatch(sendOrderTC(formData, products))\r\n        dispatch(reset(\"userForm\"))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <UserReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default FormBasket;","import React from \"react\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../bll/store\";\r\nimport {ProductInBasket} from \"./ProductInBasket\";\r\nimport {ProductType} from \"../Main/Product/Product\";\r\nimport {Actions} from \"../../bll/actions/actions\";\r\nimport FormBasket from \"./UserForm\";\r\nimport {Paper, Typography} from \"@material-ui/core\";\r\n\r\n\r\nexport const Basket = () => {\r\n    const {products, total} = useSelector<AppRootStateType, any>(state => state.basketState)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const onClickRemoveProduct = (id: string) => {\r\n        let product = products.find((pr: ProductType) => pr.id === id)\r\n        dispatch(Actions.downQuantityInBasket(product.id))\r\n        dispatch(Actions.totalPrice())\r\n    }\r\n    const onClickAddProduct = (id: string) => {\r\n        let product = products.find((pr: ProductType) => pr.id === id)\r\n        dispatch(Actions.upQuantityInBasket(product.id))\r\n        dispatch(Actions.totalPrice())\r\n    }\r\n\r\n    const productsInCart = products.map((pr: ProductType) => {\r\n        return <ProductInBasket\r\n            key={pr.id}\r\n            title={pr.title}\r\n            description={pr.description}\r\n            price={pr.price}\r\n            id={pr.id}\r\n            quantity={pr.quantity}\r\n            onClickRemoveProduct={onClickRemoveProduct}\r\n            onClickAddProduct={onClickAddProduct}\r\n        />\r\n    })\r\n\r\n    return (\r\n        <Paper>\r\n            <div className=\"basket_wrapper\">\r\n                <div className=\"basket_container\">\r\n                    <div className=\"product_block\">\r\n                        <div className=\"product_container\">\r\n                            {productsInCart}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"orderForm\">\r\n                        <FormBasket/>\r\n                    </div>\r\n                </div>\r\n                <Typography>Total : {total && total + \"$\"}</Typography>\r\n            </div>\r\n        </Paper>\r\n    )\r\n}","import {\r\n    Button,\r\n    Card,\r\n    CardActionArea,\r\n    CardActions,\r\n    CardContent,\r\n    CardMedia,\r\n    Grid,\r\n    makeStyles,\r\n    Typography\r\n} from \"@material-ui/core\"\r\nimport React from \"react\"\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 350,\r\n    },\r\n    media: {\r\n        height: 170,\r\n    },\r\n});\r\n\r\n\r\nexport type ProductType = {\r\n    title: string,\r\n    description: string,\r\n    price: string,\r\n    id: string\r\n    onClickHandler: (id: string) => void // need delete callback from this types\r\n    quantity?: number // notRequiredParameter\r\n    image: string\r\n}\r\nexport const Product = ({title, description, price, image, ...props}: ProductType) => {\r\n    const classes = useStyles();\r\n\r\n    const onClickHandler = () => {\r\n        props.onClickHandler(props.id)\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={12} sm={6} md={4}>\r\n            <Card className={classes.root}>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image={image}\r\n                        title={title}\r\n                    />\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            {price}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            {description}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                    <Button onClick={onClickHandler}\r\n                            size=\"medium\"\r\n                            color=\"primary\"\r\n                            variant=\"contained\">\r\n                        Buy\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}","import React, {useEffect} from \"react\"\r\nimport {Product, ProductType} from \"./Product/Product\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../bll/store\";\r\nimport {fetchProductsTC} from \"../../bll/mainReducer\";\r\nimport {Actions} from \"../../bll/actions/actions\";\r\nimport {Grid} from \"@material-ui/core\";\r\n\r\n\r\nexport const Main = () => {\r\n\r\n    const data = useSelector<AppRootStateType, any>(state => state.mainState)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        const thunk = fetchProductsTC();\r\n        dispatch(thunk)\r\n    }, [dispatch])\r\n\r\n    const onClickHandler = (id: string) => {\r\n        let product = data.find((pr: ProductType) => pr.id === id)\r\n        dispatch(Actions.addToBasket({...product, quantity: 1}))\r\n        dispatch(Actions.totalPrice())\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={6}>\r\n            {data.map((el: ProductType) => {\r\n                return <Product\r\n                    key={el.id}\r\n                    title={el.title}\r\n                    description={el.description}\r\n                    price={el.price}\r\n                    id={el.id}\r\n                    onClickHandler={onClickHandler}\r\n                    image={el.image}\r\n                />\r\n            })}\r\n\r\n        </Grid>\r\n    )\r\n}","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport {Header} from \"./ui/Header/Header\";\r\nimport {Basket} from \"./ui/Basket/Basket\";\r\nimport {Main} from \"./ui/Main/Main\";\r\nimport {restoreState} from \"./ui/common/saveToLocalStorage\";\r\nimport {Actions} from \"./bll/actions/actions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"./bll/store\";\r\nimport {Container, Paper} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    mainPost: {\r\n        paddingTop: 50\r\n    }\r\n}))\r\n\r\n\r\nexport const App = () => {\r\n    const classes = useStyles()\r\n\r\n    const {products, total} = useSelector<AppRootStateType, any>(state => state.basketState)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    // Restore from local storage\r\n    useEffect(() => {\r\n        const productsToLocalStorage = restoreState(\"productToStorage\", {products, total})\r\n        dispatch(Actions.setArrProductsToBasket(productsToLocalStorage))\r\n    }, [dispatch])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <main>\r\n                <Paper className={classes.mainPost}>\r\n                    <Container maxWidth=\"lg\">\r\n                        <Switch>\r\n                            <Route path=\"/basket\">\r\n                                <Basket/>\r\n                            </Route>\r\n                            <Route exact path=\"/\">\r\n                                <Main/>\r\n                            </Route>\r\n                        </Switch>\r\n                    </Container>\r\n                </Paper>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","// Функция для сохранения\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state);\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// Функция для получения\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    const stateAsString = localStorage.getItem(key);\r\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n    return defaultState;\r\n}\r\n","import React, {useEffect} from 'react';\nimport './App.css';\nimport {saveState} from \"./ui/common/saveToLocalStorage\";\nimport {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"./bll/store\";\nimport {App} from './App';\nimport {HashRouter} from \"react-router-dom\";\n\nconst AppContainer = () => {\n\n    const products = useSelector<AppRootStateType, any>(state => state.basketState)\n\n    // save products from Cart to local storage\n    useEffect(() => {\n        saveState(\"productToStorage\", products);\n    }, [products])\n\n    return (\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    )\n\n}\n\nexport default AppContainer;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./bll/store\";\r\nimport AppContainer from './AppContainer';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <AppContainer/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}